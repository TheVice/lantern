import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.library'

def ndkPath = null

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"
    ndkPath = ndkDirectory

    defaultConfig {
        minSdkVersion 3
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }

    sourceSets.main {
        java.srcDirs = ['java']
        manifest.srcFile 'AndroidManifest.xml'
        jniLibs.srcDir 'libs'
        jni.srcDirs = []
        assets.srcDirs = []
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task ndkBuild(type: Exec) {
    def ndkBuildExt = (Os.isFamily(Os.FAMILY_WINDOWS)) ? '.cmd' : ''
    commandLine "${ndkPath}${File.separator}ndk-build${ndkBuildExt}",
            '-C', file('jni').absolutePath,
            '-j', Runtime.runtime.availableProcessors()
}

task ndkClean(type: Exec) {
    def ndkBuildExt = (Os.isFamily(Os.FAMILY_WINDOWS)) ? '.cmd' : ''
    commandLine "${ndkPath}${File.separator}ndk-build${ndkBuildExt}",
            '-C', file('jni').absolutePath,
            'clean'
}


tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

clean.dependsOn ndkClean

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
